NAME: Meiyi Zheng
EMAIL: meiyizheng@g.ucla.edu
ID: 605147145

simpsh.c:
A C source file that acts as a simple shell with the following options. 
--rdonly f
O_RDONLY. Open the file f for reading only.
--rdwr f
O_RDWR. Open the file f for reading and writing.
--wronly f
O_WRONLY. Open the file f for writing only.
--pipe
Open a pipe. Unlike the other file options, this option does not take an argument. Also, it consumes two file numbers, not just one.
--command i o e cmd args
Execute a command with standard input i, standard output o and standard error e; these values should correspond to earlier file or pipe options. The executable for the command is cmd and it has zero or more arguments args. None of the cmd and args operands begin with the two characters "--".
--wait
Wait for all commands to finish. As each finishes, output its exit status or signal number as described above, and a copy of the command (with spaces separating arguments) to standard output.

--append
O_APPEND
--cloexec
O_CLOEXEC
--creat
O_CREAT
--directory
O_DIRECTORY
--dsync
O_DSYNC
--excl
O_EXCL
--nofollow
O_NOFOLLOW
--nonblock
O_NONBLOCK
--rsync
O_RSYNC
--sync
O_SYNC
--trunc
O_TRUN

--chdir dir
Change the working directory to dir. This affects the interpretation of all later options, including later --chdir options. For example, if foo is a directory (not a symbolic link), the two successive options "--chdir foo --chdir .." taken together are a no-op if successful.
--close N
Close the Nth file that was opened by a file-opening option. For a pipe, this closes just one end of the pipe. Once file N is closed, it is an error to access it, just as it is an error to access any file number that has never been opened. File numbers are not reused by later file-opening options.
--verbose
Just before executing an option, output a line to standard output containing the option. If the option has operands, list them separated by spaces. Ensure that the line is actually output, and is not merely sitting in a buffer somewhere.
--profile
Just after executing an option, output a line to standard output containing the resources used. Use getrusage and output a line containing as much useful information as you can glean from it.
--abort
Crash the shell. The shell itself should immediately dump core, via a segmentation violation.
--catch N
Arrange for signal N, where N is a decimal integer, to be caught by a handler that outputs the diagnostic N caught to stderr, and exits with status N (i.e., exiting the entire shell). N uses the same numbering as your system; for example, on GNU/Linux, a segmentation violation is signal 11.
--ignore N
Arrange for signal N to be ignored.
--default N
Arrange for the default behavior to occur if signal N arrives.
--pause
Pause, waiting for a signal to arrive.
Makefile:
default: builds simpsh executable 
dist: build a distribution tarball
clean: deletes the files created by the Makefile
check: runs the test cases to verify the output

test cases:
wait: check whether the wait command succeeds and output the correct command and exit code
abort: check the exit code is 139 when we call abort to raise a segmentation fault
chdir: check whether the exit code is 1 when we change to two same directory successively. 
profile: check whether the exit code is 0 when --profile ooption succeeds.